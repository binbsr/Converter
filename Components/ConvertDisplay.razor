
@inject ITransformer transformer

@using Transform
@using Models
@using System.Linq
@using Converter.Data;

<MudContainer Class="pa-4">
    <MudPaper Class="d-flex justify-space-around pa-2">
        <MudSwitch @bind-Checked="@IsSIChecked" Color="Color.Primary" Label="International System (SI) Units" />
        <MudSwitch @bind-Checked="@IsNepaliChecked" Color="Color.Primary" Label="चलनचल्तिको नेपाली एकाइहरू" />
        <MudSwitch @bind-Checked="@IsImperialChecked" Color="Color.Primary" Label="British/US Imperial Units" />
    </MudPaper>

    <MudGrid Class="my-4">
        <MudItem xs="12" sm="12" md="5" Class="d-flex align-center justify-center">
            <MudNumericField @bind-Value="LeftInput"
                             HideSpinButtons="true"
                             Label="@SelectedUnitLeft"
                             Immediate="true"
                             Variant="Variant.Text" />
            <MudSelect T="string"
                       Dense="true"
                       Label="From Unit"
                       @bind-Value="SelectedUnitLeft" 
                       Variant="Variant.Filled" 
                       OffsetY="true">
                @foreach (var item in ToBindOptionUnits)
                {
                    <MudSelectItem Value="@item.Value">@item.Label</MudSelectItem>
                }
            </MudSelect>
        </MudItem>
        <MudItem xs="12" sm="12" md="2" Class="d-flex align-center justify-center">
            <MudIcon Style="font-size:3.5rem;" Icon="@Icons.Material.Filled.Repeat" Color="@Color.Primary" />
        </MudItem>
        <MudItem xs="12" sm="12" md="5" Class="d-flex align-center justify-center">
            <MudNumericField @bind-Value="RightInput"
                             HideSpinButtons="true"
                             Label="@SelectedUnitRight"
                             Disabled="true"
                             Variant="Variant.Text" />
            <MudSelect T="string"
                       Dense="true"
                       Label="To Unit"
                       @bind-Value="SelectedUnitRight"
                       Variant="Variant.Filled"
                       OffsetY="true">
                @foreach (var item in ToBindOptionUnits)
                {
                    <MudSelectItem Value="@item.Value">@item.Label</MudSelectItem>
                }
            </MudSelect>
        </MudItem>
    </MudGrid>

    <MudPaper>
        <OneToManyUnits FromValue="@LeftInput"
                        FromUnit="@SelectedUnitLeft"
                        ToUnitNames="@OptionUnits.Select(x => x.Value).ToArray()" />
    </MudPaper>
</MudContainer>

@code {

    [Parameter]
    public DropdownOption[] OptionUnits { get; set; } = Array.Empty<DropdownOption>();

    [Parameter]
    public string UnitLeftDefaultValue { get; set; }

    [Parameter]
    public string UnitRightDefaultValue { get; set; }

    public double LeftInput { get; set; } = 1;

    private double _RightInput;
    public double RightInput
    {
        get => transformer.Transform(LeftInput, SelectedUnitLeft, SelectedUnitRight);
        set => _RightInput = value;
    }

    public string SelectedUnitLeft { get; set; }
    public string SelectedUnitRight { get; set; }

    public bool IsSIChecked { get; set; } = true;
    public bool IsNepaliChecked { get; set; } = true;
    public bool IsImperialChecked { get; set; } = true;

    public IEnumerable<DropdownOption> ToBindOptionUnits
    {
        get
        {
            List<DropdownOption> options = new List<DropdownOption>();
            if (IsSIChecked)
                options.AddRange(OptionUnits.Where(x => x.Type == IData.SI));
            if (IsNepaliChecked)
                options.AddRange(OptionUnits.Where(x => x.Type == IData.Nepali));
            if (IsImperialChecked)
                options.AddRange(OptionUnits.Where(x => x.Type == IData.Imperial));
            return options;
        }
    }

    protected override void OnParametersSet()
    {
        SelectedUnitLeft = UnitLeftDefaultValue;
        SelectedUnitRight = UnitRightDefaultValue;
    }
}
